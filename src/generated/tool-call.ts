// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class ToolCall {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ToolCall {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsToolCall(bb:flatbuffers.ByteBuffer, obj?:ToolCall):ToolCall {
  return (obj || new ToolCall()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsToolCall(bb:flatbuffers.ByteBuffer, obj?:ToolCall):ToolCall {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ToolCall()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

tool():string|null
tool(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tool(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

parameters():string|null
parameters(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
parameters(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

result():string|null
result(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
result(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

durationMs():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

static startToolCall(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addTool(builder:flatbuffers.Builder, toolOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, toolOffset, 0);
}

static addParameters(builder:flatbuffers.Builder, parametersOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, parametersOffset, 0);
}

static addResult(builder:flatbuffers.Builder, resultOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, resultOffset, 0);
}

static addDurationMs(builder:flatbuffers.Builder, durationMs:number) {
  builder.addFieldInt32(3, durationMs, 0);
}

static endToolCall(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createToolCall(builder:flatbuffers.Builder, toolOffset:flatbuffers.Offset, parametersOffset:flatbuffers.Offset, resultOffset:flatbuffers.Offset, durationMs:number):flatbuffers.Offset {
  ToolCall.startToolCall(builder);
  ToolCall.addTool(builder, toolOffset);
  ToolCall.addParameters(builder, parametersOffset);
  ToolCall.addResult(builder, resultOffset);
  ToolCall.addDurationMs(builder, durationMs);
  return ToolCall.endToolCall(builder);
}
}
